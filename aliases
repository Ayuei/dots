#!/bin/ksh
#
# http://github.com/mitchweaver/dots
#
# note: this is meant for ksh/mksh
#

alias a=alias

type exa > /dev/null 2>&1 &&
    a ls='exa -F' ||
    a ls='ls -F'

a {x,xx,xxx,q,qq,qqq,:q,:Q,:wq,:w,exi}=exit
a {l,sls,sl}=ls
a ll='l -l'
a la='l -a'
a lla='l -al'
a lsf='l "${PWD}"/*'
a {c,cc,cll,clear,clar,clea}='printf "\033c"'
a {cls,csl,cl,lc}='c;l'
a {e,ech,eho}=echo
a cmd=command
a {g,Grep,gerp}='grep'
a pg='pgrep'
a dg='cmd du -ahLd 1 | g'
a cp='cp -rv'
a mv='mv -v'
a {mkdir,mkd,mkdr}='mkdir -p'
a rm='rm -P'
a file='file -b -i -L'
a bn=basename
a date="date '+%a %b %d - %l:%M %p'"
a {dmesg,dmegs}='dmesg | tail -n 20'
a {k,killall}="pkill -9"
a pa='ps auwwx | head'
a ph='ps auwwx | g -i -e ${USER} | head'
a df='df -h'
a man='man -a'
a cx='chmod +x'
a chown='chown -R'
a reboot='doas reboot'
a shutdown='doas shutdown -p now'
a {mk,mkae}="make -j$(sysctl -n hw.ncpu)"
a mkc='mk clean'
a mkall="mk clean ; mk && doas mk install"
a w='curl http://wttr.in/Schmalkalden'
a wsd='curl http://wttr.in/Dakota_State_University'
a wok='curl http://wttr.in/Claremore'
a {xs,xc}='xsel -o ; e'
a rsync='rsync -rtvulh4 --progress --delete' #-c
a sshd='doas /usr/sbin/sshd'
a scp='scp -rp4'
a pubip='curl https://wtfismyip.com/text'
a {notepad,vtmp}='${EDITOR} /tmp/notepad.md'
a {suvim,suvi}='doas ${EDITOR}'
a view='${EDITOR} -R'
a {h,htpo,hto,ht,hpot,hotp}=htop
a hm='h -u ${USER}'
a hr='h -u root'
a jjar='java -jar'
a nf='neofetch'
a {irc,irssi}="irssi -c freenode"
a {discline,discord}='dash ${HOME}/usr/bin/discline ; x'
a {rtv,reddit}="rtv --enable-media ; c"
a compton="k compton ; compton & c"
a feh='feh -q -N -x --scale-down'
a 75%='mogrify -resize 75%X75%'
a 50%='mogrify -resize 50%X50%'
a 25%='mogrify -resize 25%X25%'
a trans='cmd trans -no-auto -b'
a rtrans='cmd trans -from en -to de -no-auto -b'
a {netstart,netsart,nestart}='doas sh /etc/nestart'
a {disks,disknames}="sysctl hw.disknames"
a {disklabel,label}='disklabel -h'
a args='[ $# -gt 0 ]'
a ssid="ifconfig iwn0 | grep nwid | \
    sed -e 's/.*nwid*.\(.*\)chan.*/\1/'"

mkcd() { mkd "$1" && cd "$1" ; }
mvcd() { mv "$1" "$2" && cd "$2" ; }
cpcd() { cp "$1" "$2" && cd "$2" ; }

f () { ${args} && find . -iname "*$1*" ; }
hg() { ${args} && cat ${HISTFILE} |
           g "$@" | head -n 20 ; }
sg() { sysctl | g "$@" ; }
du() { cmd du -ahLd 1 2> /dev/null | sort -rh | head -n 20 ; }
ext() { e "${1##*.}" ; }
filename() { e "${1%.*}" ; }

mkxz() { f="$(e $1 | sed 's/\///')" &&
             tar -cvpf "$f.tar" "$f" &&
                 xz "$f.tar" &&
                     [ -f "$f.tar.xz" ] &&
                         rm -rf "$f" && unset f ; }
mkgz() { f="$(e $1 | sed 's/\///')" &&
            tar -cvzpf "$f.tar.gz" "$f" &&
                [ -f "$f.tar.gz" ] &&
                    rm -rf "$f" && unset f ; }
mkbz2() { f="$(e $1 | sed 's/\///')" &&
              tar -cvjpf "$f.tar.bz" "$f" &&
                  [ -f "$f.tar.bz" ] &&
                      rm -rf "$f" && unset f ; }

pkg_del() { pkg_delete $@ ; pkg_delete -a ; }
pkg() { case "$1" in
            add) shift ; pkg_add "$@" ;;
            del) shift ; pkg_del "$@" ;;
            info) shift ; pkg_info "$@" ;;
            search) shift ; pkg_info -Q "$@" ;;
            update) shift ; pkg_add -Uui "$@" ;;
            check) shift ; pkg_check "$@" ;;
            *) e "?"
        esac ; }

reload() { . ${HOME}/etc/aes
           . ${HOME}/etc/profile
           xrdb load ${HOME}/etc/Xresources
           xmodmap ${HOME}/etc/Xmodmap
           xset m 0 0 ; } > /dev/null

nasm() { [ -f "$1" ] && c &&
             cmd nasm -f elf32 -g -F dwarf "$1" &&
                ld -m elf_i386 "${1%.*}.o" -o "${1%.*}" &&
                    ./"${1%.*}" ; }

w3m() { [ $# -eq 0 ] &&
            cmd w3m -F https://ddg.gg/lite ||
            cmd w3m -F "$@" ; }

bar() { k bar lemonbar > /dev/null 2>&1
        ${HOME}/bin/bar & c ; }

gcc() { cmd gcc $@
        e -n "${PWD}"/"$(bn $1 -- 2> /dev/null)" \
        > /tmp/shell/last_gcc ; }

!g() { path="$(cat /tmp/shell/last_gcc -- 2> /dev/null)"
       [ -n "$path" ] &&
           { e "gcc $path" ; cmd gcc "$path" ; } ||
                e "No recent gcc" ; }


v() { [ $# -eq 0 ] &&
            cmd ${EDITOR} -c VimwikiIndex ||
                cmd ${EDITOR} -p "$@"
        [ -f "$1" ] && file="$1" || \
            { [ -f "${PWD}/$1" ] && \
              file="${PWD}/$1" ; } ||
                  file="${PWD}/$(bn $1 -- \
                  2> /dev/null)"
        e -n "$file" > /tmp/last_vi ; }

a {vi,vim,nvim}=v

!v() { path="$(cat /tmp/last_vi -- 2> /dev/null)"
       [ -n "$path" ] &&
           { e "v $path" ; v "$path" ; x ; } ||
               e "No recent vi" ; }

ranger() {
    [ $# -eq 0 ] &&
        { [ "${PWD}" = ${HOME} ] &&
          path=${HOME} || path="${PWD}" ; } ||
              path="$1"
    e -n "$path" > /tmp/last_ranger
    cmd ranger "$@"
}
!r() { path="$(cat /tmp/last_ranger -- 2> /dev/null)"
    [ -n "$path" ] &&
        { e "ranger $path" ; ranger "$path" ; x ; } ||
            e "No recent ranger" ; }

# This is a hack to let you use "$@" with an 1-char alias
# in shells like ksh. You can't do this without a function,
# but you also can't have a 1-char long function.
_r() { ranger "$@" ; x ; }
a r='_r';[ -n "$RANGER_LEVEL" ] && \
    PS1="$PS1"'(RANGER): ' && clear && ls -F

a yt="c; youtube-viewer -C -q --vd=high"
a ytm="c;yt -n"
a ytdv="c;yt -d"
a ytdm='c;yt -n -d --convert-to=opus \
    --convert-cmd="ffmpeg -loglevel -8 -i \
    file:*IN* -vn -acodec libopus -ab 128k -y *OUT*"'
a ytsubs='c;yt --subs-videos --subs-order=unread'
a ytchans='c;yt --subscriptions'
a ytfavs='c;yt --favorites=mine'
a ytme='c;yt --channel-videos=mine'

mpv() { ${args} && k mpv > /dev/null 2>&1 ||
            cmd mpv --title=mpv "$@" & x ; }
mpvm() { mpv --no-video "$@" ; }
mpvx() { (mpv "$(xsel -o)" &) ; }
mpvyt() { mpv ytdl://ytsearch:"$@" ; }
mpvytm() { mpv --no-video ytdl://ytsearch:"$@" ; }

a ytdl='youtube-dl --geo-bypass --prefer-ffmpeg'
a ytdlm="youtube-dl --extract-audio --geo-bypass \
    --prefer-ffmpeg  --audio-quality 0 --audio-format opus"

a webcam='ffmpeg -i /dev/video0 -f sndio -i \
              default "$(date)".mp4'

import() { cmd import -quiet -silent -window root \
               -quality 100 ${HOME}/import.png ; }

p() { [ $# -eq 0 ] &&
          addr=mitchweaver.xyz ||
              addr="$1"
      ping -c 1 -n -q -s 1 -w 10 \
          "$addr" > /dev/null 2>&1 &&
              e "UP" || e "DOWN" ; }

gup() { git add -A &&
        git commit -m "$@" &&
        git push -u origin $(git branch 2> /dev/null | \
            sed -e '/^[^*]/d' | sed 's/* //') ; }
gadd() { [ $# -eq 0 ] && git add -A || git add "$@" ; }
gmit() { { [ $# -eq 1 ] && git add -A && \
                git commit -m "$@" ; } ||
                    { git add "$1" ; shift
            git commit -m "$@" ; } ; }
gout() { git push -u origin $(git rev-parse \
    --abbrev-ref HEAD) "$@" ; }
gdiff() { git diff origin/master ; }
gstat(){ git status ; }
greset() { git reset --hard HEAD~"$1" ; }
gbase() { [ $# -eq 0 ] &&
                git rebase -i HEAD~10 ||
                git rebase -i HEAD~"$1" ; }
gmote() { git init ; git remote add origin "$1" ; }
gclone() { git clone https://github.com/"$1" ; }
a gbort='git rebase --abort'
a glog=git\ log
a gfetch='git fetch'
a gppull='git pull'
a gbranch='git branch'
a {gcheck,checkout}='git checkout'

a {..,cd..}='cd ..'
a ...='cd ../..'
a ....='cd ../../..'

g~() { cd ${HOME} ; cl ; }
m~() { mv "$1" ${HOME} ; }
Y~() { cp "$1" ${HOME} ; }
gh() { cd ${HOME}/var/files/homework ; cl ; }
mh() { mv "$1" ${HOME}/var/files/homework ; }
Yh() { cp "$1" ${HOME}/var/files/homework ; }
gw() { cd ${HOME}/var/workspace ; cl ; }
mw() { mv "$1" ${HOME}/var/workspace ; }
Yw() { cp "$1" ${HOME}/var/workspace ; }
gT() { cd /tmp ; cl ; }
mT() { mv "$1" /tmp ; }
YT() { cp "$1" /tmp ; }
gb() { cd ${HOME}/bin ; cl ; }
mb() { mv "$1" ${HOME}/bin ; }
Yb() { cp "$1" ${HOME}/bin ; }
gf() { cd ${HOME}/var/files ; cl ; }
mf() { mv "$1" ${HOME}/var/files ; }
Yf() { cp "$1" ${HOME}/var/files ; }
gd() { cd ${HOME}/var/downloads ; cl ; }
md() { mv "$1" ${HOME}/var/downloads ; }
Yd() { cp "$1" ${HOME}/var/downloads ; }
gi() { cd ${HOME}/var/images ; cl ; }
mi() { mv "$1" ${HOME}/var/images ; }
Yi() { cp "$1" ${HOME}/var/images ; }
gW() { cd ${HOME}/var/images/wallpapers ; cl ; }
mW() { mv "$1" ${HOME}/var/images/wallpapers ; }
YW() { cp "$1" ${HOME}/var/images/wallpapers ; }
gV() { cd ${HOME}/var/videos ; cl ; }
mV() { mv "$1" ${HOME}/var/videos ; }
YV() { cp "$1" ${HOME}/var/videos ; }
gm() { cd ${HOME}/var/music; cl ; }
mm() { mv "$1" ${HOME}/var/music ; cl ; }
Ym() { cp "$1" ${HOME}/var/music ; cl ; }
gB() { cd ${HOME}/var/books ; cl ; }
mB() { mv "$1" ${HOME}/var/books ; }
YB() { cp "$1" ${HOME}/var/books ; }
gr() { cd / ; cl ; }
mr() { doas mv "$1" / ; }
Yr() { doas cp "$1" / ; }
gvar() { cd /var ; cl ; }
mvar() { doas mv "$1" /var ; }
Yvar() { doas cp "$1" /var ; }
gu() { cd /usr ; cl ; }
mu() { doas mv "$1" /usr ; }
Yu() { doas cp "$1" /usr ; }
guL() { cd /usr/local ; cl ; }
muL() { doas mv "$1" /usr/local ; }
YuL() { doas cp "$1" /usr/local ; }
ge() { cd /etc ; cl ; }
me() { doas mv "$1" /etc ; }
Ye() { doas cp "$1" /etc ; }
gM() { cd /mnt ; cl ; }
mM() { doas mv "$1" /mnt ; }
YM() { doas cp "$1" /mnt ; }
gD() { cd /dev ; cl ; }
mD() { doas mv "$1" /dev ; }
YD() { doas cp "$1" /dev ; }
gl() { cd /lib ; cl ; }
ml() { doas mv "$1" /lib ; }
Yl() { doas cp "$1" /lib ; }
gO() { cd /opt ; cl ; }
mO() { doas mv "$1" /opt ; }
YO() { doas cp "$1" /opt ; }
gt() { cd ${HOME}/tmp ; cl ; }
mt() { mv "$1" ${HOME}/tmp ; }
Yt() { cp "$1" ${HOME}/tmp ; }
gcf() { cd ${HOME}/etc/config ; cl ; }
mcf() { mv "$1" ${HOME}/etc/config ; }
Ycf() { cp "$1" ${HOME}/etc/config ; }
gp() { cd ${HOME}/usr/programs ; cl ; }
mp() { mv "$1" ${HOME}/usr/programs ; }
Yp() { cp "$1" ${HOME}/usr/programs ; }
gs() { cd ${HOME}/etc/suckless ; cl ; }
ms() { mv "$1" ${HOME}/etc/suckless ; }
Ys() { cp "$1" ${HOME}/etc/suckless ; }

a kshrc='v ${HOME}/etc/kshrc'
a {aliases,alaises,aliase}='v ${HOME}/etc/aliases'
a profile='v ${HOME}/etc/profile'
a {vimrc,virmc}='v ${HOME}/etc/vimrc'
a {bmk,bmks}='v ${HOME}/var/files/surf-bookmarks.txt'
a vssh='v ${HOME}/.ssh/config'
a xinitrc='v ${HOME}/etc/xinitrc'

a dwmc='v ${HOME}/etc/suckless/dwm/dwm.c'
a surfc='v ${HOME}/etc/suckless/surf/surf.c'
a tabbedc='v ${HOME}/etc/suckless/tabbed/tabbed.c'
a dmenuc='v ${HOME}/etc/suckless/dmenu/dmenu.c'
a stc='v ${HOME}/etc/suckless/st/st.c'

a dwmcfg='v ${HOME}/etc/suckless/dwm/config.h'
a surfcfg='v ${HOME}/etc/suckless/surf/config.h'
a tabbedcfg='v ${HOME}/etc/suckless/tabbed/config.h'
a dmenucfg='v ${HOME}/etc/suckless/dmenu/config.h'
a stcfg='v ${HOME}/etc/suckless/st/config.h'

recomp() {
    stools="${HOME}/etc/suckless"
    progs=/"${HOME}/usr/programs"
    for i in "$@" ; do
        case $i in
            dwm)      doas ${HOME}/bin/recomp $stools/dwm ;; 
            surf)     doas ${HOME}/bin/recomp $stools/surf ;; 
            tabbed)   doas ${HOME}/bin/recomp $stools/tabbed ;; 
            st)       doas ${HOME}/bin/recomp $stools/st ;; 
            dmenu)    doas ${HOME}/bin/recomp $stools/dmenu ;; 
            slock)    doas ${HOME}/bin/recomp $stools/slock ;; 
            blind)    doas ${HOME}/bin/recomp $stools/blind ;; 
            quark)    doas ${HOME}/bin/recomp $stools/quark ;; 
            ii)       doas ${HOME}/bin/recomp $stools/ii ;; 
            sent)     doas ${HOME}/bin/recomp $stools/sent ;; 
            all)      recomp dwm surf tabbed st dmenu
        esac
    done
} ; a {repomc,recopm,recpom}=recomp

a='[ $# -gt 0 ] && alias'
unalias args
