# http://github.com/mitchweaver/dots

alias a=alias

type exa > /dev/null 2>&1 &&
    a ls='exa -F' ||
    a ls='ls -F'

c() { [ $# -eq 0 ] && printf "\033c" || cd "$1" ; }

a {cc,cll,clear,clar,clea}=c
a {x,xx,xxx,q,qq,qqq,:q,:Q,:wq,:w,exi}=exit
a {l,sls,sl}=ls
a ll='l -l'
a la='l -a'
a {lla,lal}='l -al'
a lsf='l "$PWD"/*'
a {cls,csl,cl,lc}='c;l'
a {e,ech,eho}=echo
a err='>&2 e'
a {g,Grep,gerp}='grep'
a pg='pgrep'
a dg='du | g -i'
a lg='ls | g -i'
a cp='cp -irv'
a mv='mv -iv'
a {mkdir,mkd,mkdr}='mkdir -p'
a rm='rm -P'
a df='df -h'
a ln='ln -sf'
a ag='a | g -i'
a file='file -b -i -L'
a bn=basename
a {d,date}="cmd date '+%a %b %d - %l:%M %p'"
a {dmesg,dmegs}='dmesg | tail -n 20'
a {pk,killall}="pkill -9"
a pa='ps auwwx | head'
a ph='ps auwwx | g -i -e ${USER} | head'
a {m,man}='man -a'
a s=shift
a loc=local
a ex=export
a cmd=command
a cx='chmod +x'
a chown='chown -R'
a {reboot,restart}='doas reboot'
a {shutdown,poweroff}='doas shutdown -p now'
a {mk,mkae}="make -j$(sysctl -n hw.ncpu)"
a mkc='mk clean'
a mkall="mk clean ; mk && mk install"
a {xs,xc}='xsel -o ; e'
a rsync='rsync -rtvulh4 --progress --delete' #-c
a sshd='doas /usr/sbin/sshd'
a scp='scp -rp4'
a {ip,wtfismyip}='w3m https://wtfismyip.com'
a diff='git diff'
a {notepad,vtmp}='${EDITOR} /tmp/notepad.md'
a {suvim,suvi,suv}='doas ${EDITOR}'
a view='${EDITOR} -R'
a {h,htpo,hto,ht,hpot,hotp,top}=htop
a {hm,hme}='h -u ${USER}'
a {hr,hroot}='h -u root'
a nf='neofetch'
a {discline,discord}='dash ~/usr/bin/discline ; x'
a {rtv,reddit}="rtv --enable-media ; c"
a compton="k compton ; compton & c"
a feh='feh -q -N -x --scale-down'
a 50%='mogrify -resize 50%X50%'
a 25%='mogrify -resize 25%X25%'
a trans='trans -no-auto -b'
a rtrans='trans -from en -to'
a {netstart,netsart,nestart}='doas ksh /etc/netstart'
a disks="sysctl -n hw.disknames"
a disklabel='disklabel -h'
a {w,weather}='curl -s http://wttr.in/Schmalkalden?m | \
    head -n 7 | sed 1\ d ; e'
a {fc,forecast}='curl -s http://wttr.in/Schmalkalden?m | \
    tail -n 33 | sed $\ d | sed $\ d'
a heart='printf "%b\n" "\xe2\x9d\xa4"'

mkcd() { mkd "$1" && cd "$2" ; }
mvcd() { mv "$1" "$2" && cd "$2" ; }
cpcd() { cp "$1" "$2" && cd "$2" ; }

run() { [ $# -ge 2 ] || exit 1 ; x=$1 ; s
            for i in $(jot $x) ; do "$@" ; done ; }

f() { [ $# -gt 1 ] && find "$1" -iname "*$2*" ||
        find . ! -path . -iname "*$1*" ; }
hg() { [ $# -gt 0 ] && g -e "$@" $HISTFILE | head -n 20 ; }
sg() { sysctl | g -i "$@" ; }

du() { [ $# -eq 0 ] && set .
           cmd du -ahLd 1 "$1" 2> /dev/null | \
               sort -rh | head -n 20 ; }

u() { for i ; do unalias $i || \
          unset -f $i ; done ; }
ext() { e "${1##*.}" ; }
filename() { e "${1%.*}" ; }

mkxz() { loc f="$(e $1 | sed 's/\///')" &&
             tar -cvpf "$f.tar" "$f" &&
                 xz "$f.tar" &&
                     [ -f "$f.tar.xz" ] &&
                         rm -rf "$f" ; }
mkgz() { loc f="$(e $1 | sed 's/\///')" &&
            tar -cvzpf "$f.tar.gz" "$f" &&
                [ -f "$f.tar.gz" ] &&
                    rm -rf "$f"; }
mkbz2() { loc f="$(e $1 | sed 's/\///')" &&
              tar -cvjpf "$f.tar.bz" "$f" &&
                  [ -f "$f.tar.bz" ] &&
                      rm -rf "$f" ; }

qr() { if [ $# -eq 0 ] ; then
           read data ; e "$data"; 
       else
           e $* 
       fi | curl -F-=\<- qrenco.de ; }

cheat() { curl cheat.sh/$1 ; }

pkg_del() { \
    for i in $* quirks -a ; do pkg_delete $i ; done ; }
pkg() { case "$1" in
            add)    s ; pkg_add -D snap $*     ;;
            del)    s ; pkg_del $*             ;;
            info)   s ; pkg_info -D snap $*    ;;
            search) s ; pkg_info -D snap -Q $* ;;
            *) err \?
        esac ; }

reload() { . ~/etc/aliases
           xrdb load ~/etc/Xresources
           xmodmap ~/etc/Xmodmap
           xset m 0 0 
           xset b off ; }

nasm() { [ -f "$1" ] &&
             cmd nasm -f elf32 -g -F dwarf "$1" &&
                ld -m elf_i386 "${1%.*}.o" -o "${1%.*}" &&
                    ./"${1%.*}" ; }

w3m() { [ $# -gt 0 ] || cmd w3m -F https://ddg.gg/lite &&
                        cmd w3m -F $* ; }

bar() { k bar lemonbar > /dev/null 2>&1
            ~/bin/bar & c ; }

v() { [ $# -eq 0 ] && cmd ${EDITOR} -c VimwikiIndex ||
                      cmd ${EDITOR} -p "$@" ; }

a {vi,vim,nvim}=v
r() { ranger "$@" ; x ; }

a yt="c; youtube-viewer -C -q --vd=high"
a ytm="c;yt -n"
a ytdv="c;yt -d"
a ytdm='c;yt -n -d --convert-to=opus \
    --convert-cmd="ffmpeg -loglevel -8 -i \
    file:*IN* -vn -acodec libopus -ab 128k -y *OUT*"'
a ytsubs='c;yt --subs-videos --subs-order=unread'
a ytchans='c;yt --subscriptions'
a ytfavs='c;yt --favorites=mine'
a ytme='c;yt --channel-videos=mine'

mpv() { [ $# -eq 0 ] && return
    if [ "$(pg xwinwrap)" ] ; then
        kill $(pg mpv | g -v $(pg -P \
            $(cat ${HOME}/.cache/mpvbg.pid))) \
                > /dev/null 2>&1
    else
        pk mpv
    fi
    cmd mpv --title=mpv $* & x
}
mpvm() { mpv --no-video $* ; }
mpvx() { (mpv "$(xsel -o)" &) ; }
mpvyt() { mpv ytdl://ytsearch:"$@" ; }
mpvytm() { mpv --no-video ytdl://ytsearch:"$@" ; }

a ytdl='youtube-dl --geo-bypass --prefer-ffmpeg'
a ytdlm="youtube-dl --extract-audio --geo-bypass \
    --prefer-ffmpeg  --audio-quality 0 --audio-format opus"

a webcam='ffmpeg -i /dev/video0 -f sndio -i \
              default "$(date)".mp4'

import() { cmd import -quiet -silent -window root \
               -quality 100 ~/import.png ; }

p() { [ $# -gt 0 ] || set mitchweaver.xyz
          ping -c 1 -n -q -s 1 -w 10 $1 > /dev/null 2>&1 &&
              e "UP" || e "DOWN" ; }

gup() { git add -A &&
        git commit -m "$@" &&
        git push -u origin $(git branch 2> /dev/null | \
            sed -e '/^[^*]/d' | sed 's/* //') ; }
gadd() { [ $# -eq 0 ] && git add -A || git add $* ; }
gmit() { [ $# -eq 1 ] && { git add -A && \
    git commit -m "$@" ; } || \
        { git add "$1" ; s ; git commit -m $* ; } ; }
gout() { git push -u origin $(git rev-parse \
    --abbrev-ref HEAD) "$@" ; }
gdiff() { [ $# -gt 0 ] && git diff origin/$1 || \
    git diff origin/master ; }
greset() { git reset --hard HEAD~"$1" ; }
gbase() { [ $# -eq 0 ] &&
              git rebase -i HEAD~10 ||
              git rebase -i HEAD~$1 ; }
gmote() { git init 2> /dev/null ; \ 
              git remote add origin "$1" ; }
a gclone='git clone'
ghclone() { gclone https://github.com/"$1" ; }
a gitstat='git status'
a gbort='git rebase --abort'
a glog='git log'
a gfetch='git fetch'
a gppull='git pull'
a gbranch='git branch'
a {gcheck,checkout}='git checkout'

a {..,cd..}='cd ..'
a ...='.. ; ..'

_g() { cd $_ ; cl ;  }
a gb='_g ~/bin' ; a gn='_g ~/env' ; a ge='_g ~/etc'
a gt='_g ~/tmp' ; a gu='_g ~/usr' ; a gv='_g ~/var'
a gB='_g /bin'  ; a gE='_g /etc'  ; a gM='_g /mnt'  
a gT='_g /tmp'  ; a gU='_g /usr'  ; a gV='_g /var'
a gs='_g ~/src' ; a gcf='_g ~/etc/config'
a gd='_g ~/var/downloads'; a gf='_g ~/var/files'
a gi='_g ~/var/images'   ; a gm='_g ~/var/music'
a gp='_g ~/usr/programs' ; a gvi='_g ~/var/videos'
m~() { mv "$@" ~     ; } ; mb() { mv "$@" ~/bin ; }
mn() { mv "$@" ~/env ; } ; me() { mv "$@" ~/etc ; }
mt() { mv "$@" ~/tmp ; } ; mu() { mv "$@" ~/usr ; }
ms() { mv "$@" ~/src ; } ; mT() { mv "$@" /tmp  ; }
mf() { mv "$@" ~/var/files     ; }
md() { mv "$@" ~/var/downloads ; }
mi() { mv "$@" ~/var/images    ; }
mm() { mv "$@" ~/var/music     ; }
mp() { mv "$@" ~/usr/programs  ; }
ms() { mv "$@" ~/etc/suckless  ; }
mvi(){ mv "$@" ~/var/videos    ; }
Y~() { cp "$@" ~     ; } ; Yb() { cp "$@" ~/bin ; }
Yn() { cp "$@" ~/env ; } ; Ye() { cp "$@" ~/etc ; }
Yt() { cp "$@" ~/tmp ; } ; Yu() { cp "$@" ~/usr ; }
YT() { cp "$@" /tmp  ; } ; Ys() { cp "$@" ~/src ; }
Yf() { cp "$@" ~/var/files     ; }
Yd() { cp "$@" ~/var/downloads ; }
Yi() { cp "$@" ~/var/images    ; }
Ym() { cp "$@" ~/var/music     ; }
Yp() { cp "$@" ~/usr/programs  ; }
Yvi() { cp "$@" ~/var/videos   ; }

a {aliases,alaises,aliase}='v ~/etc/aliases'
a profile='v ~/etc/profile'
a {bmk,bmks}='v ~/var/files/surf-bookmarks.txt'
a vssh='v ~/.ssh/config'

rc() { v ~/etc/$1rc ; }
cfg() { v ~/etc/suckless/$1/config.h ; }
vc() { v ~/etc/suckless/$1/$1.c ; }

recomp() { loc r="doas ${HOME}/bin/recomp"
           loc s="${HOME}/etc/suckless"
           for i ; do $r $s/$i ; done ; }
