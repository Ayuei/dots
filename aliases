#!/bin/ksh
#
# http://github.com/mitchweaver/dots
#
# basically shell script masturbation
#

alias a=alias

type exa > /dev/null 2>&1 &&
    a ls='exa -F' ||
    a ls='ls -F'

a {x,xx,xxx,q,qq,qqq,:q,:Q,:wq,:w,exi}=exit
a {l,sls,sl}=ls
a ll='l -l'
a la='l -a'
a lla='l -al'
a lsf='l "$PWD"/*'
a {c,cc,cll,clear,clar,clea}='printf "\033c"'
a {cls,csl,cl,lc}='c;l'
a {e,ech,eho}=echo
a {g,Grep,gerp}='grep'
a pg='pgrep'
a dg='cmd du -ahLd 1 | g'
a cp='cp -rv'
a mv='mv -v'
a {mkdir,mkd,mkdr}='mkdir -p'
a rm='rm -P'
a df='df -h'
a ln='ln -sf'
a t=test
a ag='a | g'
a file='file -b -i -L'
a bn=basename
a date="date '+%a %b %d - %l:%M %p'"
a {dmesg,dmegs}='dmesg | tail -n 20'
a {k,killall}="pkill -9"
a pa='ps auwwx | head'
a ph='ps auwwx | g -i -e ${USER} | head'
a man='man -a'
a args='t $# -gt 0'
a s=shift
a loc=local
a ex=export
a cmd=command
a cx='chmod +x'
a chown='chown -R'
a reboot='doas reboot'
a shutdown='doas shutdown -p now'
a {mk,mkae}="make -j$(sysctl -n hw.ncpu)"
a mkc='mk clean'
a mkall="mk clean ; mk && doas mk install"
a w='curl http://wttr.in/Schmalkalden'
a {xs,xc}='xsel -o ; e'
a rsync='rsync -rtvulh4 --progress --delete' #-c
a sshd='doas /usr/sbin/sshd'
a scp='scp -rp4'
a pubip='curl https://wtfismyip.com/text'
a {notepad,vtmp}='${EDITOR} /tmp/notepad.md'
a {suvim,suvi}='doas ${EDITOR}'
a view='${EDITOR} -R'
a {h,htpo,hto,ht,hpot,hotp}=htop
a hm='h -u ${USER}'
a hr='h -u root'
a jjar='java -jar'
a nf='neofetch'
a {irc,irssi}="irssi -c freenode"
a {discline,discord}='$0 ~/usr/bin/discline ; x'
a {rtv,reddit}="rtv --enable-media ; c"
a compton="k compton ; compton & c"
a feh='feh -q -N -x --scale-down'
a 75%='mogrify -resize 75%X75%'
a 50%='mogrify -resize 50%X50%'
a 25%='mogrify -resize 25%X25%'
a trans='trans -no-auto -b'
a rtrans='trans -from en -to'
a {netstart,netsart,nestart}='doas $0 /etc/nestart'
a {disks,disknames}="sysctl hw.disknames"
a {disklabel,label}='disklabel -h'
a ssid="ifconfig iwn0 | grep nwid | \
    sed -e 's/.*nwid*.\(.*\)chan.*/\1/'"

mkcd() { mkd "$1" && cd "$1" ; }
mvcd() { mv "$1" "$2" && cd "$2" ; }
cpcd() { cp "$1" "$2" && cd "$2" ; }

f () { args && find . -iname "*$1*" ; }
hg() { args && cat ${HISTFILE} |
           g $* | head -n 20 ; }
sg() { sysctl | g $* ; }
du() { cmd du -ahLd 1 2> /dev/null | \
           sort -rh | head -n 20 ; }
u() { for i in $* ; do unalias $i || \
          unset -f $i ; done ; }
ext() { e "${1##*.}" ; }
filename() { e "${1%.*}" ; }

shred() { t -f "$1" &&
              dd if=/dev/urandom of="$1" bs=1 \
                  count=$(wc < "$1" | sed 's/ //g') ; }

mkxz() { loc f="$(e $1 | sed 's/\///')" &&
             tar -cvpf "$f.tar" "$f" &&
                 xz "$f.tar" &&
                     t -f "$f.tar.xz" &&
                         rm -rf "$f" ; }
mkgz() { loc f="$(e $1 | sed 's/\///')" &&
            tar -cvzpf "$f.tar.gz" "$f" &&
                t -f "$f.tar.gz" &&
                    rm -rf "$f"; }
mkbz2() { loc f="$(e $1 | sed 's/\///')" &&
              tar -cvjpf "$f.tar.bz" "$f" &&
                  t -f "$f.tar.bz" &&
                      rm -rf "$f" ; }

pkg_del() { pkg_delete $* ; pkg_delete -a ; }
pkg() { case "$1" in
            add) s ; pkg_add $* ;;
            del) s ; pkg_del $* ;;
            info) s ; pkg_info $* ;;
            search) s ; pkg_info -Q $* ;;
        esac ; }

reload() { . ~/etc/aliases
           . ~/etc/profile
           xrdb load ~/etc/Xresources
           xmodmap ~/etc/Xmodmap
           xset m 0 0 ; } > /dev/null

nasm() { t -f "$1" && c &&
             cmd nasm -f elf32 -g -F dwarf "$1" &&
                ld -m elf_i386 "${1%.*}.o" -o "${1%.*}" &&
                    ./"${1%.*}" ; }

w3m() { t $# -eq 0 &&
            cmd w3m -F https://ddg.gg/lite ||
            cmd w3m -F $* ; }

bar() { k bar lemonbar > /dev/null 2>&1
        ~/bin/bar & c ; }

gcc() { cmd gcc $@
        e -n "${PWD}"/"$(bn $1 -- 2> /dev/null)" \
        > /tmp/shell/last_gcc ; }

!g() { loc p="$(cat /tmp/shell/last_gcc -- 2> /dev/null)"
       t -n "$p" &&
           { e "gcc $p" ; cmd gcc "$p" ; } }


v() { t $# -eq 0 &&
            cmd ${EDITOR} -c VimwikiIndex ||
                cmd ${EDITOR} -p $*
        t -f "$1" && file="$1" || \
            { t -f "${PWD}/$1" && \
              file="${PWD}/$1" ; } ||
                  file="${PWD}/$(bn $1 -- \
                  2> /dev/null)"
        e -n "$file" > /tmp/last_vi ; }

a {vi,vim,nvim}=v

!v() { loc p="$(cat /tmp/last_vi -- 2> /dev/null)"
       t -n "$p" &&
           { e "v $p" ; v "$p" ; x ; } }

ranger() { t $# -eq 0 &&
              { t "${PWD}" = ~ &&
                    loc p=~ || p="${PWD}" ; } ||
                        p="$1"
                e -n "$p" > /tmp/last_ranger
                cmd ranger $* ; }
!r() { loc p="$(cat /tmp/last_ranger 2> /dev/null)"
    t -n "$p" &&
        { e "ranger $p" ; ranger "$p" ; x ; } }

r() { ranger $* ; x ; }

a yt="c; youtube-viewer -C -q --vd=high"
a ytm="c;yt -n"
a ytdv="c;yt -d"
a ytdm='c;yt -n -d --convert-to=opus \
    --convert-cmd="ffmpeg -loglevel -8 -i \
    file:*IN* -vn -acodec libopus -ab 128k -y *OUT*"'
a ytsubs='c;yt --subs-videos --subs-order=unread'
a ytchans='c;yt --subscriptions'
a ytfavs='c;yt --favorites=mine'
a ytme='c;yt --channel-videos=mine'

mpv() { args && k mpv > /dev/null 2>&1 ||
            cmd mpv --title=mpv $* & x ; }
mpvm() { mpv --no-video $* ; }
mpvx() { (mpv "$(xsel -o)" &) ; }
mpvyt() { mpv ytdl://ytsearch:$* ; }
mpvytm() { mpv --no-video ytdl://ytsearch:$* ; }

a ytdl='youtube-dl --geo-bypass --prefer-ffmpeg'
a ytdlm="youtube-dl --extract-audio --geo-bypass \
    --prefer-ffmpeg  --audio-quality 0 --audio-format opus"

a webcam='ffmpeg -i /dev/video0 -f sndio -i \
              default "$(date)".mp4'

import() { cmd import -quiet -silent -window root \
               -quality 100 ~/import.png ; }

p() { args && loc a="$1" || loc a=mitchweaver.xyz
      ping -c 1 -n -q -s 1 -w 10 $a > /dev/null 2>&1 &&
          "UP" || e "DOWN" ; }

gup() { git add -A &&
        git commit -m "$@" &&
        git push -u origin $(git branch 2> /dev/null | \
            sed -e '/^[^*]/d' | sed 's/* //') ; }
gadd() { t $# -eq 0 && git add -A || git add $* ; }
gmit() { { t $# -eq 1 && git add -A && \
    git commit -m "$@" ; } || \
        { git add "$1" ; s ; git commit -m $* ; } ; }
gout() { git push -u origin $(git rev-parse \
    --abbrev-ref HEAD) "$@" ; }
gdiff() { git diff origin/master ; }
gstat(){ git status ; }
greset() { git reset --hard HEAD~"$1" ; }
gbase() { t $# -eq 0 &&
                git rebase -i HEAD~10 ||
                git rebase -i HEAD~"$1" ; }
gmote() { git init ; git remote add origin "$1" ; }
gclone() { git clone https://github.com/"$1" ; }
a gbort='git rebase --abort'
a glog=git\ log
a gfetch='git fetch'
a gppull='git pull'
a gbranch='git branch'
a {gcheck,checkout}='git checkout'

a {..,cd..}='cd ..'
a ...='cd ../..'
a ....='cd ../../..'

_g() { cd "$1" ; cl ; }
a g~='_g ~'
a gb='_g ~/bin' ; a gn='_g ~/env' ; a ge='_g ~/etc'
a gt='_g ~/tmp' ; a gu='_g ~/usr' ; a gv='_g ~/var'
a gB='_g /bin'  ; a gE='_g /etc'  ; a gM='_g /mnt'  
a gT='_g /tmp'  ; a gU='_g /usr'  ; a gV='_g /var'
a gf='_g ~/var/files'    ; a gh='_g ~/var/files/homework'
a gd='_g ~/var/downloads'; a gi='_g ~/var/images'
a gm='_g ~/var/music'    ; a gvi='_g ~/var/videos'
a gw='_g ~/var/workspace'; a gp='_g ~/usr/programs'
a gs='_g ~/etc/suckless' ; a gcf='_g ~/etc/config'
_m() { mv "$1" "$2" ; cl ; }
m~() { _m "$1" ~     ; } ; mb() { _m "$1" ~/bin ; }
mn() { _m "$1" ~/env ; } ; me() { _m "$1" ~/etc ; }
mt() { _m "$1" ~/tmp ; } ; mu() { _m "$1" ~/usr ; }
mT() { _m "$1" /tmp  ; } ; 
mf() { _m "$1" ~/var/files' ; }
mh() { _m "$1" ~/var/files/homework' ; }
md() { _m "$1" ~/var/downloads' ; }
mi() { _m "$1" ~/var/images' ; }
mm() { _m "$1" ~/var/music' ; }
mw() { _m "$1" ~/var/workspace' ; }
mp() { _m "$1" ~/usr/programs' ; }
ms() { _m "$1" ~/etc/suckless' ; }
mcf() { _m "$1" ~/etc/config' ; }
mvi() { _m "$1" ~/var/videos' ; }
_y() { cp "$1" "$2" ; cl ; }
Y~() { _y "$1" ~     ; } ; Yb() { _y "$1" ~/bin ; }
Yn() { _y "$1" ~/env ; } ; Ye() { _y "$1" ~/etc ; }
Yt() { _y "$1" ~/tmp ; } ; Yu() { _y "$1" ~/usr ; }
YT() { _y "$1" /tmp  ; }
Yf() { _y "$1" ~/var/files' ; }
Yh() { _y "$1" ~/var/files/homework' ; }
Yd() { _y "$1" ~/var/downloads' ; }
Yi() { _y "$1" ~/var/images' ; }
Ym() { _y "$1" ~/var/music' ; }
Yw() { _y "$1" ~/var/workspace' ; }
Yp() { _y "$1" ~/usr/programs' ; }
Ys() { _y "$1" ~/etc/suckless' ; }
Ycf() { _y "$1" ~/etc/config' ; }
Yvi() { _y "$1" ~/var/videos' ; }

a kshrc='v ~/etc/kshrc'
a {aliases,alaises,aliase}='v ~/etc/aliases'
a profile='v ~/etc/profile'
a {vimrc,virmc}='v ~/etc/vimrc'
a {bmk,bmks}='v ~/var/files/surf-bookmarks.txt'
a vssh='v ~/.ssh/config'
a xinitrc='v ~/etc/xinitrc'

_s() { v ~/etc/suckless/$1 ; }
a dwmc='_s dwm/dwm.c'
a surfc='_s surf/surf.c'
a tabbedc='_s tabbed/tabbed.c'
a dmenuc='_s dmenu/dmenu.c'
a stc='_s st/st.c'

a dwmcfg='_s dwm/config.h'
a surfcfg='_s surf/config.h'
a tabbedcfg='_s tabbed/config.h'
a dmenucfg='_s dmenu/config.h'
a stcfg='_s st/config.h'

recomp() {
    loc s="${HOME}/etc/suckless"
    loc r="doas ${HOME}/bin/recomp"
    for i in $* ; do doas $r $s/$i ; done
} ; a {repomc,recopm,recpom}=recomp
